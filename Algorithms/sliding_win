def sliding_win(arr, n, k):
    curr = sum(arr[0: k])
    ans = [curr]
    
    for i in range(1, n - k + 1):
        curr = curr - arr[i - 1]
        curr = curr + arr[i + k - 1]
        
        ans.append(curr)
        
    return ans


# Dynamic Window

def dy_win(arr, n, val):
    s_ptr = 0
    e_ptr = 1
    curr_sum = 0
    min_len = float('inf')
    
    while e_ptr < n:
        # Expanding Window from end
        curr_sum += arr[e_ptr]
        e_ptr += 1
        
        # Shrinking Window for start
        while s_ptr < e_ptr and curr_sum >= val:
            curr_sum -= arr[s_ptr]
            s_ptr += 1
            
        min_len = min(min_len, e_ptr - s_ptr + 1)
        
    return min_len
